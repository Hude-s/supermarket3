<!DOCTYPE web-app PUBLIC
        "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"
        "http://java.sun.com/dtd/web-app_2_3.dtd" >
<web-app>
    <display-name>Archetype Created Web Application</display-name>
    <!--指定spring配置文件路径-->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>classpath:mybatis.xml</param-value>
    </context-param>


    <filter>
        <filter-name>characterEncodingFilter</filter-name>
        <!--该过滤器必须配置在其他过滤器之前 否则会失效-->
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
        <init-param>
            <param-name>forceRequestEncoding</param-name>
            <param-value>true</param-value>
        </init-param>
        <init-param>
            <param-name>forceResponseEncoding</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>
    <filter>
        <filter-name>HiddenHttpMethodFilter</filter-name>
        <filter-class>org.springframework.web.filter.HiddenHttpMethodFilter</filter-class>
    </filter>

    <filter-mapping>
        <filter-name>characterEncodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
        <!--该过滤器会拦截所有请求 并处理乱码-->
    </filter-mapping>

    <filter-mapping>
        <filter-name>HiddenHttpMethodFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <!--监听器 服务器启动时创建spring框架IOC容器-->
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>

    <!--配置前端控制器 分发请求-->
    <servlet>
        <servlet-name>dispatcherServlet</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <!--指定springmvc的配置文件名称和路径-->
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:spring.xml</param-value>
        </init-param>
    </servlet>


    <servlet>
        <servlet-name>employee</servlet-name>
        <jsp-file>/WEB-INF/pages/employee.html</jsp-file>
    </servlet>
    <servlet>
        <servlet-name>user</servlet-name>
        <jsp-file>/WEB-INF/pages/user.html</jsp-file>
    </servlet>
    <servlet>
        <servlet-name>goods</servlet-name>
        <jsp-file>/WEB-INF/pages/goods.html</jsp-file>
    </servlet>
    <servlet>
        <servlet-name>supplier</servlet-name>
        <jsp-file>/WEB-INF/pages/supplier.html</jsp-file>
    </servlet>


    <servlet>
        <servlet-name>welcome1</servlet-name>
        <jsp-file>/WEB-INF/pages/welcome1.html</jsp-file>
    </servlet>
    <servlet>
        <servlet-name>sold</servlet-name>
        <jsp-file>/WEB-INF/pages/sold.html</jsp-file>
    </servlet>

    <servlet-mapping>
        <servlet-name>sold</servlet-name>
        <url-pattern>/sold</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>welcome1</servlet-name>
        <url-pattern>/welcome1</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
        <servlet-name>supplier</servlet-name>
        <url-pattern>/supplier</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>goods</servlet-name>
        <url-pattern>/goods</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
        <servlet-name>user</servlet-name>
        <url-pattern>/user</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
        <servlet-name>employee</servlet-name>
        <url-pattern>/employee</url-pattern>
    </servlet-mapping>


    <servlet-mapping>
        <servlet-name>dispatcherServlet</servlet-name>
        <url-pattern>/</url-pattern>
    </servlet-mapping>


</web-app>
